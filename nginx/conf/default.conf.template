# Grafana Server Block
server {
    listen 80;
    server_name _GRAFANA_DOMAIN_;
    location /.well-known/acme-challenge/ { root /var/www/certbot; }
    location / { return 301 https://$host$request_uri; }
}
server {
    listen 443 ssl;
    server_name _GRAFANA_DOMAIN_;
    ssl_certificate /etc/letsencrypt/live/_GRAFANA_DOMAIN_/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/_GRAFANA_DOMAIN_/privkey.pem;
    location / {
        proxy_pass http://grafana:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# API Server Block
server {
    listen 80;
    server_name _API_DOMAIN_;
    location /.well-known/acme-challenge/ { root /var/www/certbot; }
    location / { return 301 https://$host$request_uri; }
}
server {
    listen 443 ssl;
    server_name _API_DOMAIN_;
    ssl_certificate /etc/letsencrypt/live/_API_DOMAIN_/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/_API_DOMAIN_/privkey.pem;
    location / {
        proxy_pass http://api:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# InfluxDB UI Server Block
server {
    listen 80;
    server_name _INFLUX_DOMAIN_;
    location /.well-known/acme-challenge/ { root /var/www/certbot; }
    location / { return 301 https://$host$request_uri; }
}
server {
    listen 443 ssl;
    server_name _INFLUX_DOMAIN_;
    ssl_certificate /etc/letsencrypt/live/_INFLUX_DOMAIN_/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/_INFLUX_DOMAIN_/privkey.pem;
    location / {
        proxy_pass http://influxdb:8086;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}